import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.5916b37e.js";const u=JSON.parse('{"title":"copper3d_visualisation","description":"","frontmatter":{},"headers":[],"relativePath":"apidist/README.md","filePath":"apidist/README.md"}'),l={name:"apidist/README.md"},o=p(`<p>copper3d / <a href="./modules.html">Modules</a></p><h1 id="copper3d-visualisation" tabindex="-1">copper3d_visualisation <a class="header-anchor" href="#copper3d-visualisation" aria-label="Permalink to &quot;copper3d_visualisation&quot;">​</a></h1><p><a href="https://www.npmjs.com/package/copper3d" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/copper3d_visualisation" alt="NPM Package"></a><a href="https://copper3d-visualisation.readthedocs.io/en/latest/" target="_blank" rel="noreferrer"><img src="https://img.shields.io/readthedocs/copper3d_visualisation" alt="Read the Docs"></a><a href="https://linkungao.github.io/copper3d_examples" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/copper3d__visualisation-examples-orange" alt="Copper3d Examples"></a><a href="https://abi-web-apps.github.io/NRRD_Segmentation_Tool/" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/Nrrd__Segmentation__tool-example-orange" alt="NRRD_Segmentation_Tool example"></a><a href="https://uoa-heart-mechanics-research.github.io/medtech-heart/model-heart" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/Medtech%20Heart-example-brightgreen" alt="MedTech Heart example"></a></p><p>A 3d visualisation package base on threejs provides multiple scenes and Nrrd image load funtion.</p><h3 id="documentation" tabindex="-1">Documentation: <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation:&quot;">​</a></h3><p><a href="https://copper3d-visualisation.readthedocs.io/en/latest/" target="_blank" rel="noreferrer">https://copper3d-visualisation.readthedocs.io/en/latest/</a></p><h3 id="previous-versions" tabindex="-1">Previous versions <a class="header-anchor" href="#previous-versions" aria-label="Permalink to &quot;Previous versions&quot;">​</a></h3><p>Old: <a href="https://www.npmjs.com/package/copper3d_visualisation" target="_blank" rel="noreferrer">https://www.npmjs.com/package/copper3d_visualisation</a> Very old: <a href="https://www.npmjs.com/package/gltfloader-plugin-test" target="_blank" rel="noreferrer">https://www.npmjs.com/package/gltfloader-plugin-test</a></p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p><a href="https://linkungao.github.io/loadHumanModel_example/" target="_blank" rel="noreferrer">Pick model with Gltfloader</a></p><p><a href="https://linkungao.github.io/copper3d_examples" target="_blank" rel="noreferrer">Copper3d_examples</a></p><h3 id="useage" tabindex="-1">Useage <a class="header-anchor" href="#useage" aria-label="Permalink to &quot;Useage&quot;">​</a></h3><ul><li>Load demo</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Copper </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;copper3d&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { getCurrentInstance, onMounted } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> refs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> appRenderer;</span></span>
<span class="line"><span style="color:#B392F0;">onMounted</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> { $refs } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getCurrentInstance</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">).proxy;</span></span>
<span class="line"><span style="color:#E1E4E8;">  refs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $refs;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bg</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLDivElement</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> refs.classfy;</span></span>
<span class="line"><span style="color:#E1E4E8;">  appRenderer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Copper.</span><span style="color:#B392F0;">copperRenderer</span><span style="color:#E1E4E8;">(bg);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> appRenderer.</span><span style="color:#B392F0;">getCurrentScene</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.</span><span style="color:#B392F0;">createDemoMesh</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  appRenderer.</span><span style="color:#B392F0;">animate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Copper </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;copper3d&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { getCurrentInstance, onMounted } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> refs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> appRenderer;</span></span>
<span class="line"><span style="color:#6F42C1;">onMounted</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> { $refs } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getCurrentInstance</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">).proxy;</span></span>
<span class="line"><span style="color:#24292E;">  refs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $refs;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bg</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLDivElement</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> refs.classfy;</span></span>
<span class="line"><span style="color:#24292E;">  appRenderer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Copper.</span><span style="color:#6F42C1;">copperRenderer</span><span style="color:#24292E;">(bg);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> appRenderer.</span><span style="color:#6F42C1;">getCurrentScene</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  scene.</span><span style="color:#6F42C1;">createDemoMesh</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  appRenderer.</span><span style="color:#6F42C1;">animate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><ul><li>Add options (curently only control gui)</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">appRenderer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Copper.</span><span style="color:#B392F0;">copperRenderer</span><span style="color:#E1E4E8;">(bg, { guiOpen: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">appRenderer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Copper.</span><span style="color:#6F42C1;">copperRenderer</span><span style="color:#24292E;">(bg, { guiOpen: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> });</span></span></code></pre></div><ul><li>Load multiple scenes with gltf-loader</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> Copper </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;copper3d&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { getCurrentInstance, onMounted } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> refs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> appRenderer;</span></span>
<span class="line"><span style="color:#B392F0;">onMounted</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> { $refs } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getCurrentInstance</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">).proxy;</span></span>
<span class="line"><span style="color:#E1E4E8;">  refs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $refs;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bg</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLDivElement</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> refs.classfy;</span></span>
<span class="line"><span style="color:#E1E4E8;">  appRenderer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Copper.</span><span style="color:#B392F0;">copperRenderer</span><span style="color:#E1E4E8;">(bg);</span></span>
<span class="line"><span style="color:#E1E4E8;">  appRenderer.</span><span style="color:#B392F0;">animate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">loadModel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/Healthy.glb&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;health&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadModel</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">url</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> scene1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> appRenderer.</span><span style="color:#B392F0;">getSceneByName</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (scene1 </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> appRenderer.</span><span style="color:#B392F0;">createScene</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">    appRenderer.</span><span style="color:#B392F0;">setCurrentScene</span><span style="color:#E1E4E8;">(scene1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene1.</span><span style="color:#B392F0;">loadViewUrl</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/noInfarct_view.json&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene1.</span><span style="color:#B392F0;">loadGltf</span><span style="color:#E1E4E8;">(url);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    appRenderer.</span><span style="color:#B392F0;">setCurrentScene</span><span style="color:#E1E4E8;">(scene1);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> Copper </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;copper3d&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { getCurrentInstance, onMounted } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> refs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> appRenderer;</span></span>
<span class="line"><span style="color:#6F42C1;">onMounted</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> { $refs } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getCurrentInstance</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">).proxy;</span></span>
<span class="line"><span style="color:#24292E;">  refs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $refs;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bg</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLDivElement</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> refs.classfy;</span></span>
<span class="line"><span style="color:#24292E;">  appRenderer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Copper.</span><span style="color:#6F42C1;">copperRenderer</span><span style="color:#24292E;">(bg);</span></span>
<span class="line"><span style="color:#24292E;">  appRenderer.</span><span style="color:#6F42C1;">animate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">loadModel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/Healthy.glb&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;health&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadModel</span><span style="color:#24292E;">(</span><span style="color:#E36209;">url</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> scene1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> appRenderer.</span><span style="color:#6F42C1;">getSceneByName</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (scene1 </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> appRenderer.</span><span style="color:#6F42C1;">createScene</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">    appRenderer.</span><span style="color:#6F42C1;">setCurrentScene</span><span style="color:#24292E;">(scene1);</span></span>
<span class="line"><span style="color:#24292E;">    scene1.</span><span style="color:#6F42C1;">loadViewUrl</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/noInfarct_view.json&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    scene1.</span><span style="color:#6F42C1;">loadGltf</span><span style="color:#24292E;">(url);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    appRenderer.</span><span style="color:#6F42C1;">setCurrentScene</span><span style="color:#24292E;">(scene1);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="viewdata-structure" tabindex="-1">Viewdata Structure <a class="header-anchor" href="#viewdata-structure" aria-label="Permalink to &quot;Viewdata Structure&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> CameraViewPoint {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">nearPlane</span><span style="color:#E1E4E8;">: number </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">farPlane</span><span style="color:#E1E4E8;">: number </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2000.0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">eyePosition</span><span style="color:#E1E4E8;">: Array</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">number</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">targetPosition</span><span style="color:#E1E4E8;">: Array</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">number</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">upVector</span><span style="color:#E1E4E8;">: Array</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">number</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1.0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> CameraViewPoint {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">nearPlane</span><span style="color:#24292E;">: number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">farPlane</span><span style="color:#24292E;">: number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000.0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">eyePosition</span><span style="color:#24292E;">: Array</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">number</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">targetPosition</span><span style="color:#24292E;">: Array</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">number</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">upVector</span><span style="color:#24292E;">: Array</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">number</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><h4 id="acknowledgements" tabindex="-1">Acknowledgements <a class="header-anchor" href="#acknowledgements" aria-label="Permalink to &quot;Acknowledgements&quot;">​</a></h4><p>Special thanks to <a href="https://wiki.cancerimagingarchive.net/pages/viewpage.action?pageId=70226903" target="_blank" rel="noreferrer">Duke University dataset</a> provides these awsome MRI data!!!</p>`,23),e=[o];function t(r,c,E,y,i,d){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
